 // api/threat-intel/malwarebazaar.js
  export async function lookupMalwareBazaar(ioc) {
    const ABUSECH_API_KEY = process.env.ABUSECH_API_KEY;
    if (!ABUSECH_API_KEY) {
      return { error: "Missing Abuse.ch API key for MalwareBazaar." };
    }
  
    const trimmedIOC = ioc.trim();
  
    // Check if it's a search query or hash
    if (trimmedIOC.includes(":") && !trimmedIOC.match(/^[a-fA-F0-9]{32,64}$/)) {
      return await advancedSearchMB(trimmedIOC);
    }
  
    // Hash lookup
    const payload = { query: "get_info", hash: trimmedIOC };
  
    try {
      const response = await fetch("https://mb-api.abuse.ch/api/v1/", {
        method: 'POST',
        headers: {
          "User-Agent": "ai-soc-agent/1.0",
          "Auth-Key": ABUSECH_API_KEY
        },
        body: new URLSearchParams(payload),
        timeout: 10000
      });
  
      if (!response.ok) {
        const errorText = await response.text();
        return { error: `HTTP ${response.status}`, details: errorText };
      }
  
      const data = await response.json();
      
      if (data.query_status === "ok" && data.data) {
        const entry = data.data[0];
        return {
          found: true,
          "SHA256": entry.sha256_hash,
          "File Name": entry.file_name,
          "File Type": entry.file_type_mime,
          "File Size": entry.file_size,
          "Signature": entry.signature,
          "Tags": entry.tags,
          "Vendor Detections": entry.vendor_intel || {},
          "Delivery Method": entry.delivery_method,
          "First Seen": entry.first_seen,
          "Last Seen": entry.last_seen,
          "Comment": entry.comment,
          "Reporter": entry.reporter,
          "Intelligence": entry.intelligence || {}
        };
      } else if (data.query_status === "hash_not_found") {
        return { message: "Hash not found in MalwareBazaar." };
      } else if (data.query_status === "no_results") {
        return { message: "No MalwareBazaar results found." };
      } else if (data.query_status === "missing_query") {
        return { error: "Invalid query format for MalwareBazaar API." };
      } else {
        return {
          status: data.query_status,
          reason: data.reason || "No reason provided."
        };
      }
    } catch (error) {
      return { error: error.message };
    }
  }
  
  async function advancedSearchMB(term) {
    const ABUSECH_API_KEY = process.env.ABUSECH_API_KEY;
    const payload = {
      query: "search",
      search_term: term
    };
    
    try {
      const response = await fetch("https://mb-api.abuse.ch/api/v1/", {
        method: 'POST',
        headers: {
          "User-Agent": "ai-soc-agent/1.0",
          "Auth-Key": ABUSECH_API_KEY
        },
        body: new URLSearchParams(payload),
        timeout: 10000
      });
  
      if (!response.ok) {
        const errorText = await response.text();
        return { error: `HTTP ${response.status}`, details: errorText };
      }
  
      const data = await response.json();
      
      if (data.query_status === "ok" && data.data) {
        return {
          found: true,
          results: data.data.slice(0, 5).map(entry => ({
            "SHA256": entry.sha256_hash,
            "File Name": entry.file_name,
            "File Type": entry.file_type_mime,
            "Signature": entry.signature,
            "Tags": entry.tags,
            "First Seen": entry.first_seen,
            "Reporter": entry.reporter,
            "File Size": entry.file_size
          }))
        };
      } else if (data.query_status === "no_results") {
        return { message: "No MalwareBazaar search results found." };
      } else {
        return {
          status: data.query_status,
          reason: data.reason || "No data matched."
        };
      }
    } catch (error) {
      return { error: error.message };
    }
  }
  